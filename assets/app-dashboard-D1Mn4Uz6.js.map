{"version":3,"file":"app-dashboard-D1Mn4Uz6.js","sources":["../../src/assets/1cgeo.png","../../src/components/dashboard/ConsolidatedDataExport.jsx","../../src/components/dashboard/DashboardHeader.jsx","../../src/components/dashboard/StatsCards.jsx","../../src/utils/dateUtils.js","../../src/components/dashboard/DailyCommitsChart.jsx","../../src/components/dashboard/MonthlyCommitsChart.jsx","../../src/components/dashboard/WeekdayCommitsChart.jsx","../../src/components/dashboard/HourlyCommitsChart.jsx","../../src/components/dashboard/ReposPieChart.jsx","../../src/components/dashboard/CurrentMonthPieChart.jsx","../../src/components/dashboard/CurrentMonthWeekdayChart.jsx","../../src/components/dashboard/CurrentMonthHourlyChart.jsx","../../src/components/dashboard/PaginatedTable.jsx","../../src/components/dashboard/LatestCommitsTable.jsx","../../src/components/dashboard/AuthorCommitsTable.jsx","../../src/components/dashboard/RepoCommitsTable.jsx"],"sourcesContent":["export default \"__VITE_ASSET__Ctm75nbm__\"","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Box\r\n} from '@mui/material';\r\nimport { Assessment } from '@mui/icons-material';\r\nimport _ from 'lodash';\r\n\r\nfunction ConsolidatedDataExport({ data }) {\r\n  const [open, setOpen] = useState(false);\r\n  const currentDate = new Date();\r\n  const [month, setMonth] = useState(currentDate.getMonth());\r\n  const [year, setYear] = useState(currentDate.getFullYear());\r\n\r\n  // Get available years and months from data\r\n  const years = _.uniq(data.map(commit => commit.date.getFullYear()))\r\n    .filter(year => year >= 2022)\r\n    .sort((a, b) => b - a);\r\n\r\n  const months = Array.from({ length: 12 }, (_, i) => ({\r\n    value: i,\r\n    label: new Date(2000, i).toLocaleString('pt-BR', { month: 'long' })\r\n  }));\r\n\r\n  const handleExport = () => {\r\n    // Filter commits for selected period\r\n    const periodCommits = data.filter(commit => {\r\n      const commitDate = commit.date;\r\n      return commitDate.getFullYear() === year && commitDate.getMonth() === month;\r\n    });\r\n\r\n    // Group by repository\r\n    const commitsByRepo = _.groupBy(periodCommits, 'repo');\r\n\r\n    // Prepare CSV data and sort by number of commits\r\n    const csvData = Object.entries(commitsByRepo)\r\n      .map(([repo, commits]) => {\r\n      const authors = _.uniq(commits.map(c => c.author)).join(';');\r\n      return {\r\n        Repositório: repo,\r\n        'Número de commits': commits.length,\r\n        Efetivo: authors\r\n      };\r\n    });\r\n\r\n    // Convert to CSV string\r\n    const headers = ['Repositório', 'Número de commits', 'Efetivo'];\r\n    let csvString = [\r\n      headers.join(','),\r\n      ...csvData.map(row => headers.map(header => row[header]).join(','))\r\n    ].join('\\n');\r\n\r\n    // Sort CSV rows by number of commits (excluding header)\r\n    const [headerRow, ...dataRows] = csvString.split('\\n');\r\n    const sortedRows = dataRows.sort((a, b) => {\r\n      const commitsA = parseInt(a.split(',')[1]);\r\n      const commitsB = parseInt(b.split(',')[1]);\r\n      return commitsB - commitsA;\r\n    });\r\n\r\n    csvString = [headerRow, ...sortedRows].join('\\n');\r\n\r\n    // Create and download file\r\n    const blob = new Blob([csvString], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = `commits_${year}_${String(month + 1).padStart(2, '0')}.csv`;\r\n    link.click();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<Assessment />}\r\n        onClick={() => setOpen(true)}\r\n        sx={{ mt: 2 }}\r\n      >\r\n        Dados Consolidados\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={() => setOpen(false)}>\r\n        <DialogTitle>Exportar Dados Consolidados</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ display: 'flex', gap: 2, mt: 2 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Ano</InputLabel>\r\n              <Select\r\n                value={year}\r\n                label=\"Ano\"\r\n                onChange={(e) => setYear(e.target.value)}\r\n              >\r\n                {years.map((yearOption) => {\r\n                  const currentDate = new Date();\r\n                  const isDisabled = yearOption > currentDate.getFullYear();\r\n                  return (\r\n                    <MenuItem \r\n                      key={yearOption} \r\n                      value={yearOption}\r\n                      disabled={isDisabled}\r\n                    >\r\n                      {yearOption}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Mês</InputLabel>\r\n              <Select\r\n                value={month}\r\n                label=\"Mês\"\r\n                onChange={(e) => setMonth(e.target.value)}\r\n              >\r\n                {months.map(({ value, label }) => {\r\n                  const isDisabled = year === currentDate.getFullYear() && value > currentDate.getMonth();\r\n                  return (\r\n                    <MenuItem \r\n                      key={value} \r\n                      value={value}\r\n                      disabled={isDisabled}\r\n                    >\r\n                      {label}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)}>Cancelar</Button>\r\n          <Button \r\n            onClick={handleExport}\r\n            disabled={!year || month === ''}\r\n          >\r\n            Exportar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConsolidatedDataExport;","import React from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport logoImage from '../../assets/1cgeo.png';\r\nimport ConsolidatedDataExport from './ConsolidatedDataExport';\r\n\r\nfunction DashboardHeader({ data }) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n      <img src={logoImage} alt=\"1º CGEO Logo\" style={{ height: '100px' }} />\r\n      <Box>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          Dashboard de Commits - 1º CGEO\r\n        </Typography>\r\n        <Typography color=\"text.secondary\">\r\n          Monitoramento de atividade em repositórios administrados pelo 1º CGEO desde 01/01/2022\r\n        </Typography>\r\n        <ConsolidatedDataExport data={data} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DashboardHeader;","// src/components/dashboard/StatsCards.jsx\r\nimport React from 'react';\r\nimport { Grid, Paper, Typography } from '@mui/material';\r\n\r\nfunction StatsCard({ title, value }) {\r\n  return (\r\n    <Grid item xs={12} sm={6} md={3}>\r\n      <Paper sx={{ p: 2, textAlign: 'center' }}>\r\n        <Typography color=\"text.secondary\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"h4\">\r\n          {value.toLocaleString('pt-BR')}\r\n        </Typography>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction StatsCards({ data }) {\r\n  const commits2025 = data.filter(commit => commit.date.getFullYear() === 2025).length;\r\n  const commits2024 = data.filter(commit => commit.date.getFullYear() === 2024).length;\r\n  const repos2025 = new Set(data.filter(commit => \r\n    commit.date.getFullYear() === 2025).map(commit => commit.repo)\r\n  ).size;\r\n  const repos2024 = new Set(data.filter(commit => \r\n    commit.date.getFullYear() === 2024).map(commit => commit.repo)\r\n  ).size;\r\n\r\n  return (\r\n    <Grid container spacing={3} sx={{ mb: 3 }}>\r\n      <StatsCard title=\"Commits em 2025\" value={commits2025} />\r\n      <StatsCard title=\"Commits em 2024\" value={commits2024} />\r\n      <StatsCard title=\"Repositórios Ativos 2025\" value={repos2025} />\r\n      <StatsCard title=\"Repositórios Ativos 2024\" value={repos2024} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default StatsCards;","/**\r\n * Converte uma data UTC para o fuso horário de Brasília (UTC-3)\r\n * @param {Date} date - Data UTC\r\n * @returns {Date} Data no fuso horário de Brasília\r\n */\r\nexport function convertToBrasiliaTimezone(date) {\r\n  return new Date(date.toLocaleString('en-US', { timeZone: 'America/Sao_Paulo' }));\r\n}\r\n\r\n/**\r\n * Obtém a data no início do dia no fuso horário de Brasília\r\n * @param {Date} date - Data UTC\r\n * @returns {Date} Data no início do dia no fuso horário de Brasília\r\n */\r\nexport function getBrasiliaStartOfDay(date) {\r\n  const brasiliaDate = convertToBrasiliaTimezone(date);\r\n  brasiliaDate.setHours(0, 0, 0, 0);\r\n  return brasiliaDate;\r\n}\r\n\r\n/**\r\n * Agrupa commits por data no fuso horário de Brasília\r\n * @param {Array} commits - Array de commits\r\n * @returns {Object} Commits agrupados por data (YYYY-MM-DD)\r\n */\r\nexport function groupCommitsByBrasiliaDate(commits) {\r\n  return commits.reduce((acc, commit) => {\r\n    // Use toLocaleDateString para garantir a data correta em Brasília\r\n    const dateKey = convertToBrasiliaTimezone(commit.date)\r\n      .toLocaleDateString('en-CA', { timeZone: 'America/Sao_Paulo' }); // formato YYYY-MM-DD\r\n    \r\n    if (!acc[dateKey]) {\r\n      acc[dateKey] = [];\r\n    }\r\n    acc[dateKey].push(commit);\r\n    return acc;\r\n  }, {});\r\n}\r\n\r\n/**\r\n * Gera um array com as últimas N datas no fuso horário de Brasília\r\n * @param {number} days - Número de dias\r\n * @returns {Array} Array com objetos de data\r\n */\r\nexport function getLastNDaysInBrasilia(days) {\r\n  const now = new Date();\r\n  return Array.from({ length: days }, (_, i) => {\r\n    const date = new Date(now);\r\n    date.setDate(date.getDate() - i);\r\n    \r\n    // Usar toLocaleDateString garante a data correta em Brasília\r\n    const isoDate = date.toLocaleDateString('en-CA', { timeZone: 'America/Sao_Paulo' }); // YYYY-MM-DD\r\n    const displayDate = date.toLocaleDateString('pt-BR', { timeZone: 'America/Sao_Paulo' });\r\n    const fullDate = date.toLocaleDateString('pt-BR', {\r\n      day: 'numeric',\r\n      month: 'long',\r\n      year: 'numeric',\r\n      timeZone: 'America/Sao_Paulo'\r\n    });\r\n    \r\n    return {\r\n      isoDate,\r\n      displayDate,\r\n      fullDate\r\n    };\r\n  }).reverse();\r\n}","import React, { useMemo } from 'react';\r\nimport { Paper, Box, Typography, useTheme, useMediaQuery } from '@mui/material';\r\nimport { Timeline } from '@mui/icons-material';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport _ from 'lodash';\r\nimport { getLastNDaysInBrasilia, groupCommitsByBrasiliaDate } from '../../utils/dateUtils';\r\n\r\nfunction DailyCommitsChart({ data }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const isTablet = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  const viewportConfig = useMemo(() => ({\r\n    daysToShow: isMobile ? 10 : isTablet ? 20 : 30,\r\n    axisInterval: isMobile ? 3 : isTablet ? 4 : 6,\r\n    height: isMobile ? 250 : isTablet ? 280 : 300,\r\n    dateFormat: {\r\n      day: 'numeric',\r\n      month: isMobile ? 'numeric' : isTablet ? 'short' : 'long',\r\n      timeZone: 'America/Sao_Paulo'\r\n    }\r\n  }), [isMobile, isTablet]);\r\n\r\n  const chartData = useMemo(() => {\r\n    const lastDays = getLastNDaysInBrasilia(viewportConfig.daysToShow);\r\n    const commitsByDate = groupCommitsByBrasiliaDate(data);\r\n\r\n    return lastDays.map(({ isoDate, displayDate, fullDate }) => ({\r\n      date: displayDate,\r\n      fullDate,\r\n      commits: (commitsByDate[isoDate] || []).length\r\n    }));\r\n  }, [data, viewportConfig.daysToShow]);\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload?.[0]) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <Box sx={{\r\n          bgcolor: 'background.paper',\r\n          p: 1.5,\r\n          border: '1px solid',\r\n          borderColor: 'divider',\r\n          borderRadius: 1,\r\n          boxShadow: theme.shadows[2]\r\n        }}>\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\r\n            {data.fullDate}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            {data.commits} {data.commits === 1 ? 'commit' : 'commits'}\r\n          </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{\r\n      p: { xs: 1.5, sm: 2, md: 3 },\r\n      height: 'fit-content'\r\n    }}>\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography\r\n          variant={isMobile ? \"subtitle1\" : \"h6\"}\r\n          component=\"div\"\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 1,\r\n            fontSize: { xs: '1rem', sm: '1.25rem' }\r\n          }}\r\n        >\r\n          <Timeline sx={{ \r\n            fontSize: { \r\n              xs: '1.25rem', \r\n              sm: 'inherit',\r\n              md: '1.5rem' \r\n            } \r\n          }} />\r\n          Commits por Dia (Últimos {viewportConfig.daysToShow} dias)\r\n        </Typography>\r\n      </Box>\r\n      <ResponsiveContainer width=\"100%\" height={viewportConfig.height}>\r\n        <BarChart\r\n          data={chartData}\r\n          margin={{\r\n            top: 5,\r\n            right: isMobile ? 5 : isTablet ? 15 : 20,\r\n            left: isMobile ? 5 : isTablet ? 15 : 20,\r\n            bottom: isMobile ? 45 : isTablet ? 35 : 20\r\n          }}\r\n        >\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            tick={{\r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n            interval={viewportConfig.axisInterval}\r\n            angle={isMobile ? -45 : 0}\r\n            textAnchor={isMobile ? \"end\" : \"middle\"}\r\n            height={isMobile ? 60 : 30}\r\n            tickMargin={isMobile ? 15 : 5}\r\n          />\r\n          <YAxis\r\n            width={35}\r\n            tick={{\r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n            tickFormatter={(value) => Math.floor(value)}\r\n          />\r\n          <Tooltip\r\n            content={<CustomTooltip />}\r\n            cursor={{ fill: theme.palette.action.hover }}\r\n          />\r\n          <Bar\r\n            dataKey=\"commits\"\r\n            fill={theme.palette.primary.main}\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default DailyCommitsChart;","import React, { useMemo } from 'react';\r\nimport { Paper, Box, Typography, useTheme, useMediaQuery } from '@mui/material';\r\nimport { BarChart as BarChartIcon } from '@mui/icons-material';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport _ from 'lodash';\r\n\r\nfunction MonthlyCommitsChart({ data }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const chartData = useMemo(() => {\r\n    const last12Months = Array.from({length: 12}, (_, i) => {\r\n      const date = new Date();\r\n      date.setMonth(date.getMonth() - i);\r\n      return {\r\n        year: date.getFullYear(),\r\n        month: date.getMonth(),\r\n        label: date.toLocaleString('pt-BR', { \r\n          month: isMobile ? 'short' : 'long', \r\n          year: 'numeric' \r\n        }),\r\n        fullLabel: date.toLocaleString('pt-BR', { \r\n          month: 'long', \r\n          year: 'numeric' \r\n        })\r\n      };\r\n    }).reverse();\r\n\r\n    return last12Months.map(({year, month, label, fullLabel}) => {\r\n      const commits = data.filter(commit => {\r\n        const commitDate = commit.date;\r\n        return commitDate.getFullYear() === year && commitDate.getMonth() === month;\r\n      }).length;\r\n      \r\n      return { \r\n        label, \r\n        fullLabel,\r\n        commits \r\n      };\r\n    });\r\n  }, [data, isMobile]);\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload?.[0]) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <Box sx={{ \r\n          bgcolor: 'background.paper', \r\n          p: 1.5, \r\n          border: '1px solid',\r\n          borderColor: 'divider',\r\n          borderRadius: 1,\r\n          boxShadow: theme.shadows[2]\r\n        }}>\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\r\n            {data.fullLabel}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            {data.commits} {data.commits === 1 ? 'commit' : 'commits'}\r\n          </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  \r\n  return (\r\n    <Paper sx={{ \r\n      p: { xs: 1.5, sm: 2 },\r\n      height: 'fit-content'\r\n    }}>\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography \r\n          variant={isMobile ? \"subtitle1\" : \"h6\"} \r\n          component=\"div\" \r\n          sx={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            gap: 1,\r\n            fontSize: { xs: '1rem', sm: '1.25rem' }\r\n          }}\r\n        >\r\n          <BarChartIcon sx={{ fontSize: { xs: '1.25rem', sm: 'inherit' } }} />\r\n          Commits por Mês (12 meses)\r\n        </Typography>\r\n      </Box>\r\n      <ResponsiveContainer width=\"100%\" height={isMobile ? 250 : 300}>\r\n        <BarChart \r\n          data={chartData}\r\n          margin={{\r\n            top: 5,\r\n            right: isMobile ? 5 : 20,\r\n            left: isMobile ? 5 : 20,\r\n            bottom: isMobile ? 60 : 20\r\n          }}\r\n        >\r\n          <XAxis \r\n            dataKey=\"label\" \r\n            tick={{ \r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n            interval={isMobile ? 1 : \"preserveStartEnd\"}\r\n            angle={isMobile ? -45 : 0}\r\n            textAnchor={isMobile ? \"end\" : \"middle\"}\r\n            height={isMobile ? 60 : 30}\r\n          />\r\n          <YAxis \r\n            width={35}\r\n            tick={{ \r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n            tickFormatter={(value) => Math.floor(value)}\r\n          />\r\n          <Tooltip \r\n            content={<CustomTooltip />}\r\n            cursor={{ fill: theme.palette.action.hover }}\r\n          />\r\n          <Bar \r\n            dataKey=\"commits\" \r\n            fill={theme.palette.primary.main}\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default MonthlyCommitsChart;","import React, { useMemo } from 'react';\r\nimport { Paper, Box, Typography, useTheme, useMediaQuery } from '@mui/material';\r\nimport { CalendarMonth } from '@mui/icons-material';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport _ from 'lodash';\r\n\r\nconst weekDayOrder = [\r\n  'domingo',\r\n  'segunda-feira',\r\n  'terça-feira',\r\n  'quarta-feira',\r\n  'quinta-feira',\r\n  'sexta-feira',\r\n  'sábado'\r\n];\r\n\r\nfunction WeekdayCommitsChart({ data }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const chartData = useMemo(() => {\r\n    const commitsByDayOfWeek = _.groupBy(data, commit =>\r\n      commit.date.toLocaleString('pt-BR', { weekday: 'long' }).toLowerCase()\r\n    );\r\n\r\n    return weekDayOrder.map(day => ({\r\n      day: isMobile ? day.slice(0, 3) : day, // Abreviação para mobile\r\n      fullDay: day,\r\n      commits: (commitsByDayOfWeek[day] || []).length\r\n    }));\r\n  }, [data, isMobile]);\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload?.[0]) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <Box sx={{ \r\n          bgcolor: 'background.paper', \r\n          p: 1.5, \r\n          border: '1px solid',\r\n          borderColor: 'divider',\r\n          borderRadius: 1,\r\n          boxShadow: theme.shadows[2]\r\n        }}>\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\r\n            {data.fullDay}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            {data.commits} {data.commits === 1 ? 'commit' : 'commits'}\r\n          </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ \r\n      p: { xs: 1.5, sm: 2 },\r\n      height: 'fit-content'\r\n    }}>\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography \r\n          variant={isMobile ? \"subtitle1\" : \"h6\"} \r\n          component=\"div\" \r\n          sx={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            gap: 1,\r\n            fontSize: { xs: '1rem', sm: '1.25rem' }\r\n          }}\r\n        >\r\n          <CalendarMonth sx={{ fontSize: { xs: '1.25rem', sm: 'inherit' } }} />\r\n          Commits por Dia da Semana\r\n        </Typography>\r\n      </Box>\r\n      <ResponsiveContainer width=\"100%\" height={isMobile ? 250 : 300}>\r\n        <BarChart \r\n          data={chartData}\r\n          margin={{\r\n            top: 5,\r\n            right: isMobile ? 5 : 20,\r\n            left: isMobile ? 5 : 20,\r\n            bottom: isMobile ? 20 : 5\r\n          }}\r\n        >\r\n          <XAxis \r\n            dataKey=\"day\"\r\n            tick={{ \r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n            interval={0}\r\n          />\r\n          <YAxis \r\n            width={35}\r\n            tick={{ \r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n            tickFormatter={(value) => Math.floor(value)}\r\n          />\r\n          <Tooltip \r\n            content={<CustomTooltip />}\r\n            cursor={{ fill: theme.palette.action.hover }}\r\n          />\r\n          <Bar \r\n            dataKey=\"commits\" \r\n            fill={theme.palette.primary.main}\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default WeekdayCommitsChart;","import React, { useMemo } from 'react';\r\nimport { Paper, Box, Typography, useTheme, useMediaQuery } from '@mui/material';\r\nimport { AccessTime } from '@mui/icons-material';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst timeRanges = [\r\n  { label: '00h - 08h', mobileLabel: '00-08h', start: 0, end: 8 },\r\n  { label: '08h - 13h', mobileLabel: '08-13h', start: 8, end: 13 },\r\n  { label: '13h - 17h', mobileLabel: '13-17h', start: 13, end: 17 },\r\n  { label: '17h - 00h', mobileLabel: '17-00h', start: 17, end: 24 }\r\n];\r\n\r\nfunction HourlyCommitsChart({ data }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const chartData = useMemo(() => {\r\n    return timeRanges.map(range => {\r\n      const commits = data.filter(commit => {\r\n        const hour = new Date(commit.date).toLocaleString('en-US', {\r\n          timeZone: 'America/Sao_Paulo',\r\n          hour: 'numeric',\r\n          hour12: false\r\n        });\r\n        const brasiliaHour = parseInt(hour);\r\n        return brasiliaHour >= range.start && brasiliaHour < range.end;\r\n      });\r\n\r\n      return {\r\n        range: isMobile ? range.mobileLabel : range.label,\r\n        fullRange: range.label,\r\n        commits: commits.length\r\n      };\r\n    });\r\n  }, [data, isMobile]);\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload?.[0]) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <Box sx={{ \r\n          bgcolor: 'background.paper', \r\n          p: 1.5, \r\n          border: '1px solid',\r\n          borderColor: 'divider',\r\n          borderRadius: 1,\r\n          boxShadow: theme.shadows[2]\r\n        }}>\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\r\n            {data.fullRange}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            {data.commits} {data.commits === 1 ? 'commit' : 'commits'}\r\n          </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ \r\n      p: { xs: 1.5, sm: 2 },\r\n      height: 'fit-content'\r\n    }}>\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography \r\n          variant={isMobile ? \"subtitle1\" : \"h6\"} \r\n          component=\"div\" \r\n          sx={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            gap: 1,\r\n            fontSize: { xs: '1rem', sm: '1.25rem' }\r\n          }}\r\n        >\r\n          <AccessTime sx={{ fontSize: { xs: '1.25rem', sm: 'inherit' } }} />\r\n          Commits por Horário\r\n        </Typography>\r\n      </Box>\r\n      <ResponsiveContainer width=\"100%\" height={isMobile ? 250 : 300}>\r\n        <BarChart \r\n          data={chartData}\r\n          margin={{\r\n            top: 5,\r\n            right: isMobile ? 5 : 20,\r\n            left: isMobile ? 5 : 20,\r\n            bottom: isMobile ? 20 : 5\r\n          }}\r\n        >\r\n          <XAxis \r\n            dataKey=\"range\"\r\n            tick={{ \r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n            interval={0}\r\n          />\r\n          <YAxis \r\n            width={35}\r\n            tick={{ \r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n            tickFormatter={(value) => Math.floor(value)}\r\n          />\r\n          <Tooltip \r\n            content={<CustomTooltip />}\r\n            cursor={{ fill: theme.palette.action.hover }}\r\n          />\r\n          <Bar \r\n            dataKey=\"commits\" \r\n            fill={theme.palette.primary.main}\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default HourlyCommitsChart;","import React, { useState } from 'react';\r\nimport { Paper, Box, Typography, Button, useTheme, useMediaQuery } from '@mui/material';\r\nimport { PieChart, Pie, Cell, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { PieChart as PieChartIcon, ExpandMore, ExpandLess } from '@mui/icons-material';\r\nimport _ from 'lodash';\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8', '#82ca9d'];\r\n\r\nfunction ImprovedReposPieChart({ data }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [showAll, setShowAll] = useState(false);\r\n\r\n  // Processar dados por organização\r\n  const groupedRepos = _.groupBy(data, commit => {\r\n    const [org] = commit.repo.split('/');\r\n    return org;\r\n  });\r\n\r\n  // Preparar dados para o gráfico\r\n  const processData = () => {\r\n    let allRepos = Object.entries(_.groupBy(data, 'repo'))\r\n      .map(([repo, commits]) => ({\r\n        name: repo.split('/')[1], // Remove org prefix\r\n        fullName: repo,\r\n        value: commits.length,\r\n        org: repo.split('/')[0]\r\n      }))\r\n      .sort((a, b) => b.value - a.value);\r\n\r\n    if (!showAll && allRepos.length > 9) {\r\n      const topRepos = allRepos.slice(0, 8);\r\n      const otherRepos = allRepos.slice(8);\r\n      const otherValue = _.sumBy(otherRepos, 'value');\r\n      \r\n      return [\r\n        ...topRepos,\r\n        {\r\n          name: `Outros (${otherRepos.length} repos)`,\r\n          fullName: 'outros',\r\n          value: otherValue,\r\n          org: 'outros'\r\n        }\r\n      ];\r\n    }\r\n\r\n    return allRepos;\r\n  };\r\n\r\n  const pieChartData = processData();\r\n\r\n  // Tooltip customizado\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload?.[0]) {\r\n      const data = payload[0].payload;\r\n      const total = _.sumBy(pieChartData, 'value');\r\n      const percentage = ((data.value / total) * 100).toFixed(1);\r\n      \r\n      return (\r\n        <Box sx={{ \r\n          bgcolor: 'background.paper', \r\n          p: 1.5, \r\n          border: '1px solid',\r\n          borderColor: 'divider',\r\n          borderRadius: 1,\r\n          boxShadow: theme.shadows[2]\r\n        }}>\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\r\n            {data.fullName}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            {data.value} commits ({percentage}%)\r\n          </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Legenda customizada\r\n  const CustomLegend = ({ payload }) => (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      flexWrap: 'wrap', \r\n      gap: 1,\r\n      justifyContent: 'center',\r\n      maxHeight: '100px',\r\n      overflowY: 'auto',\r\n      px: 2\r\n    }}>\r\n      {payload.map((entry, index) => (\r\n        <Box\r\n          key={`legend-${index}`}\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 0.5,\r\n            minWidth: isMobile ? '45%' : '30%'\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: 12,\r\n              height: 12,\r\n              backgroundColor: entry.color,\r\n              borderRadius: '50%'\r\n            }}\r\n          />\r\n          <Typography \r\n            variant=\"caption\" \r\n            sx={{ \r\n              maxWidth: '90%',\r\n              whiteSpace: 'nowrap',\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis'\r\n            }}\r\n            title={entry.payload.fullName}\r\n          >\r\n            {entry.value}\r\n          </Typography>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Paper sx={{ p: 2 }}>\r\n      <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Typography variant=\"h6\" component=\"div\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <PieChartIcon />\r\n          Commits por Repositório\r\n        </Typography>\r\n        <Button\r\n          size=\"small\"\r\n          onClick={() => setShowAll(!showAll)}\r\n          startIcon={showAll ? <ExpandLess /> : <ExpandMore />}\r\n        >\r\n          {showAll ? 'Mostrar Menos' : 'Mostrar Todos'}\r\n        </Button>\r\n      </Box>\r\n      \r\n      <Box sx={{ height: isMobile ? 300 : 400 }}>\r\n        <ResponsiveContainer>\r\n          <PieChart>\r\n            <Pie\r\n              data={pieChartData}\r\n              cx=\"50%\"\r\n              cy=\"45%\"\r\n              innerRadius={isMobile ? 40 : 60}\r\n              outerRadius={isMobile ? 70 : 90}\r\n              paddingAngle={2}\r\n              dataKey=\"value\"\r\n            >\r\n              {pieChartData.map((entry, index) => (\r\n                <Cell \r\n                  key={`cell-${index}`} \r\n                  fill={COLORS[index % COLORS.length]}\r\n                />\r\n              ))}\r\n            </Pie>\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Legend content={<CustomLegend />} />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default ImprovedReposPieChart;","import React, { useState, useMemo } from 'react';\r\nimport { Paper, Box, Typography, Button, useTheme, useMediaQuery } from '@mui/material';\r\nimport { PieChart, Pie, Cell, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { CalendarToday, ExpandMore, ExpandLess } from '@mui/icons-material';\r\nimport _ from 'lodash';\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8', '#82ca9d'];\r\n\r\nfunction CurrentMonthPieChart({ data }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [showAll, setShowAll] = useState(false);\r\n\r\n  // Filtrar commits do mês atual\r\n  const currentDate = new Date();\r\n  const currentMonth = currentDate.getMonth();\r\n  const currentYear = currentDate.getFullYear();\r\n\r\n  const currentMonthCommits = data.filter(commit => {\r\n    const commitDate = commit.date;\r\n    return commitDate.getMonth() === currentMonth && \r\n           commitDate.getFullYear() === currentYear;\r\n  });\r\n  \r\n  const currentMonthShort = new Date().toLocaleString('pt-BR', { month: 'short' });\r\n\r\n  // Preparar dados para o gráfico\r\n  const { pieChartData, totalRepos } = useMemo(() => {\r\n    let allRepos = Object.entries(_.groupBy(currentMonthCommits, 'repo'))\r\n      .map(([repo, commits]) => ({\r\n        name: repo.split('/')[1], // Remove org prefix\r\n        fullName: repo,\r\n        value: commits.length,\r\n        org: repo.split('/')[0]\r\n      }))\r\n      .sort((a, b) => b.value - a.value);\r\n\r\n    if (!showAll && allRepos.length > 8) {\r\n      const topRepos = allRepos.slice(0, 8);\r\n      const otherRepos = allRepos.slice(8);\r\n      const otherValue = _.sumBy(otherRepos, 'value');\r\n      \r\n      return {\r\n        pieChartData: [\r\n          ...topRepos,\r\n          {\r\n            name: `Outros (${otherRepos.length} repos)`,\r\n            fullName: 'outros',\r\n            value: otherValue,\r\n            org: 'outros'\r\n          }\r\n        ],\r\n        totalRepos: allRepos.length\r\n      };\r\n    }\r\n\r\n    return {\r\n      pieChartData: allRepos,\r\n      totalRepos: allRepos.length\r\n    };\r\n  }, [currentMonthCommits, showAll]);\r\n\r\n  // Tooltip customizado\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload?.[0]) {\r\n      const data = payload[0].payload;\r\n      const total = _.sumBy(pieChartData, 'value');\r\n      const percentage = ((data.value / total) * 100).toFixed(1);\r\n      \r\n      return (\r\n        <Box sx={{ \r\n          bgcolor: 'background.paper', \r\n          p: 1.5, \r\n          border: '1px solid',\r\n          borderColor: 'divider',\r\n          borderRadius: 1,\r\n          boxShadow: theme.shadows[2]\r\n        }}>\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\r\n            {data.fullName}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            {data.value} commits ({percentage}%)\r\n          </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Legenda customizada\r\n  const CustomLegend = ({ payload }) => (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      flexWrap: 'wrap', \r\n      gap: 1,\r\n      justifyContent: 'center',\r\n      maxHeight: '100px',\r\n      overflowY: 'auto',\r\n      px: 2\r\n    }}>\r\n      {payload.map((entry, index) => (\r\n        <Box\r\n          key={`legend-${index}`}\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 0.5,\r\n            minWidth: isMobile ? '45%' : '30%'\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: 12,\r\n              height: 12,\r\n              backgroundColor: entry.color,\r\n              borderRadius: '50%'\r\n            }}\r\n          />\r\n          <Typography \r\n            variant=\"caption\" \r\n            sx={{ \r\n              maxWidth: '90%',\r\n              whiteSpace: 'nowrap',\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis'\r\n            }}\r\n            title={entry.payload.fullName}\r\n          >\r\n            {entry.value}\r\n          </Typography>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Paper sx={{ p: 2 }}>\r\n      <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Typography variant=\"h6\" component=\"div\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <CalendarToday />\r\n          Commits por Repositório ({currentMonthShort})\r\n        </Typography>\r\n        {totalRepos > 8 && (\r\n          <Button\r\n            size=\"small\"\r\n            onClick={() => setShowAll(!showAll)}\r\n            startIcon={showAll ? <ExpandLess /> : <ExpandMore />}\r\n          >\r\n            {showAll ? 'Mostrar Menos' : 'Mostrar Todos'}\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      \r\n      <Box sx={{ height: isMobile ? 300 : 400 }}>\r\n        {pieChartData.length > 0 ? (\r\n          <ResponsiveContainer>\r\n            <PieChart>\r\n              <Pie\r\n                data={pieChartData}\r\n                cx=\"50%\"\r\n                cy=\"45%\"\r\n                innerRadius={isMobile ? 40 : 60}\r\n                outerRadius={isMobile ? 70 : 90}\r\n                paddingAngle={2}\r\n                dataKey=\"value\"\r\n              >\r\n                {pieChartData.map((entry, index) => (\r\n                  <Cell \r\n                    key={`cell-${index}`} \r\n                    fill={COLORS[index % COLORS.length]}\r\n                  />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Legend content={<CustomLegend />} />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <Box sx={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'center',\r\n            height: '100%' \r\n          }}>\r\n            <Typography color=\"text.secondary\">\r\n              Nenhum commit encontrado neste mês\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default CurrentMonthPieChart;","import React, { useMemo } from 'react';\r\nimport { Paper, Box, Typography, useTheme, useMediaQuery } from '@mui/material';\r\nimport { CalendarMonth } from '@mui/icons-material';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport _ from 'lodash';\r\n\r\nconst weekDayOrder = [\r\n  'domingo',\r\n  'segunda-feira',\r\n  'terça-feira',\r\n  'quarta-feira',\r\n  'quinta-feira',\r\n  'sexta-feira',\r\n  'sábado'\r\n];\r\n\r\nfunction CurrentMonthWeekdayChart({ data }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const chartData = useMemo(() => {\r\n    // Filtra commits do mês atual\r\n    const currentDate = new Date();\r\n    const currentYear = currentDate.getFullYear();\r\n    const currentMonth = currentDate.getMonth();\r\n\r\n    const currentMonthCommits = data.filter(commit => {\r\n      const commitDate = commit.date;\r\n      return commitDate.getMonth() === currentMonth && \r\n             commitDate.getFullYear() === currentYear;\r\n    });\r\n\r\n    // Agrupa por dia da semana\r\n    const commitsByDayOfWeek = _.groupBy(currentMonthCommits, commit => \r\n      commit.date.toLocaleString('pt-BR', { weekday: 'long' }).toLowerCase()\r\n    );\r\n\r\n    return weekDayOrder.map(day => ({\r\n      day: isMobile ? day.slice(0, 3) : day, // Abreviação para mobile\r\n      fullDay: day,\r\n      commits: (commitsByDayOfWeek[day] || []).length\r\n    }));\r\n  }, [data, isMobile]);\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload?.[0]) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <Box sx={{ \r\n          bgcolor: 'background.paper', \r\n          p: 1.5, \r\n          border: '1px solid',\r\n          borderColor: 'divider',\r\n          borderRadius: 1,\r\n          boxShadow: theme.shadows[2]\r\n        }}>\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\r\n            {data.fullDay}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            {data.commits} {data.commits === 1 ? 'commit' : 'commits'}\r\n          </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const currentMonth = new Date().toLocaleString('pt-BR', { month: 'long' });\r\n\r\n  return (\r\n    <Paper sx={{ \r\n      p: { xs: 1.5, sm: 2 },\r\n      height: 'fit-content'\r\n    }}>\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography \r\n          variant={isMobile ? \"subtitle1\" : \"h6\"} \r\n          component=\"div\" \r\n          sx={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            gap: 1,\r\n            fontSize: { xs: '1rem', sm: '1.25rem' }\r\n          }}\r\n        >\r\n          <CalendarMonth sx={{ fontSize: { xs: '1.25rem', sm: 'inherit' } }} />\r\n          Commits por Dia da Semana ({currentMonth})\r\n        </Typography>\r\n      </Box>\r\n      <ResponsiveContainer width=\"100%\" height={isMobile ? 250 : 300}>\r\n        <BarChart \r\n          data={chartData}\r\n          margin={{\r\n            top: 5,\r\n            right: isMobile ? 5 : 20,\r\n            left: isMobile ? 5 : 20,\r\n            bottom: isMobile ? 20 : 5\r\n          }}\r\n        >\r\n          <XAxis \r\n            dataKey=\"day\"\r\n            tick={{ \r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n            interval={0}\r\n          />\r\n          <YAxis \r\n            width={35}\r\n            tick={{ \r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n            tickFormatter={(value) => Math.floor(value)}\r\n          />\r\n          <Tooltip \r\n            content={<CustomTooltip />}\r\n            cursor={{ fill: theme.palette.action.hover }}\r\n          />\r\n          <Bar \r\n            dataKey=\"commits\" \r\n            fill={theme.palette.primary.main}\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default CurrentMonthWeekdayChart;","import React, { useMemo } from 'react';\r\nimport { Paper, Box, Typography, useTheme, useMediaQuery } from '@mui/material';\r\nimport { AccessTime } from '@mui/icons-material';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst timeRanges = [\r\n  { label: '00h - 08h', start: 0, end: 8 },\r\n  { label: '08h - 13h', start: 8, end: 13 },\r\n  { label: '13h - 17h', start: 13, end: 17 },\r\n  { label: '17h - 00h', start: 17, end: 24 }\r\n];\r\n\r\nfunction CurrentMonthHourlyChart({ data }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const currentMonth = new Date().toLocaleString('pt-BR', { \r\n    month: 'long',\r\n    timeZone: 'America/Sao_Paulo' \r\n  });\r\n\r\n  const chartData = useMemo(() => {\r\n    // Filtrar commits do mês atual usando o timezone de Brasília\r\n    const currentMonthCommits = data.filter(commit => {\r\n      const commitDate = new Date(commit.date).toLocaleString('en-US', {\r\n        timeZone: 'America/Sao_Paulo',\r\n        year: 'numeric',\r\n        month: 'numeric'\r\n      });\r\n      const nowDate = new Date().toLocaleString('en-US', {\r\n        timeZone: 'America/Sao_Paulo',\r\n        year: 'numeric',\r\n        month: 'numeric'\r\n      });\r\n      \r\n      return commitDate === nowDate;\r\n    });\r\n\r\n    return timeRanges.map(range => {\r\n      const commits = currentMonthCommits.filter(commit => {\r\n        const hour = new Date(commit.date).toLocaleString('en-US', {\r\n          timeZone: 'America/Sao_Paulo',\r\n          hour: 'numeric',\r\n          hour12: false\r\n        });\r\n        const brasiliaHour = parseInt(hour);\r\n        return brasiliaHour >= range.start && brasiliaHour < range.end;\r\n      });\r\n\r\n      return {\r\n        range: range.label,\r\n        commits: commits.length\r\n      };\r\n    });\r\n  }, [data]);\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload?.[0]) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <Box sx={{ \r\n          bgcolor: 'background.paper', \r\n          p: 1.5, \r\n          border: '1px solid',\r\n          borderColor: 'divider',\r\n          borderRadius: 1,\r\n          boxShadow: theme.shadows[2]\r\n        }}>\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\r\n            {data.range}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            {data.commits} {data.commits === 1 ? 'commit' : 'commits'}\r\n          </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ \r\n      p: { xs: 1.5, sm: 2 },\r\n      height: 'fit-content'\r\n    }}>\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography \r\n          variant={isMobile ? \"subtitle1\" : \"h6\"} \r\n          component=\"div\" \r\n          sx={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            gap: 1,\r\n            fontSize: { xs: '1rem', sm: '1.25rem' }\r\n          }}\r\n        >\r\n          <AccessTime sx={{ fontSize: { xs: '1.25rem', sm: 'inherit' } }} />\r\n          Commits por Horário ({currentMonth})\r\n        </Typography>\r\n      </Box>\r\n      <ResponsiveContainer width=\"100%\" height={isMobile ? 250 : 300}>\r\n        <BarChart \r\n          data={chartData}\r\n          margin={{\r\n            top: 5,\r\n            right: isMobile ? 5 : 20,\r\n            left: isMobile ? 5 : 20,\r\n            bottom: isMobile ? 20 : 5\r\n          }}\r\n        >\r\n          <XAxis \r\n            dataKey=\"range\"\r\n            tick={{ \r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n          />\r\n          <YAxis \r\n            width={35}\r\n            tick={{ \r\n              fontSize: isMobile ? 10 : 12,\r\n              fill: theme.palette.text.primary\r\n            }}\r\n            tickFormatter={(value) => Math.floor(value)}\r\n          />\r\n          <Tooltip \r\n            content={<CustomTooltip />}\r\n            cursor={{ fill: theme.palette.action.hover }}\r\n          />\r\n          <Bar \r\n            dataKey=\"commits\" \r\n            fill={theme.palette.primary.main}\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default CurrentMonthHourlyChart;","import React, { useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  TableContainer,\r\n  useTheme,\r\n  useMediaQuery\r\n} from '@mui/material';\r\n\r\nconst PaginatedTable = ({ \r\n  data, \r\n  columns,\r\n  columnWidths, \r\n  renderRow,\r\n  renderMobileRow,\r\n  defaultRowsPerPage = 10,\r\n  mobileRowsPerPage = 5\r\n}) => {\r\n  const [page, setPage] = useState(0);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const rowsPerPage = isMobile ? mobileRowsPerPage : defaultRowsPerPage;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const paginatedData = data.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <Table sx={{ tableLayout: 'fixed' }}>\r\n          {!isMobile && (\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column, index) => (\r\n                  <TableCell \r\n                    key={index}\r\n                    style={{\r\n                      width: columnWidths[index]\r\n                    }}\r\n                  >\r\n                    {column}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n          )}\r\n          <TableBody>\r\n            {paginatedData.map((item, index) => \r\n              isMobile ? renderMobileRow(item, index, {\r\n                backgroundColor: index % 2 === 0 ? 'background.paper' : 'action.hover'\r\n              }) : renderRow(item, index)\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={data.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        rowsPerPage={rowsPerPage}\r\n        rowsPerPageOptions={[rowsPerPage]}\r\n        labelDisplayedRows={({ from, to, count }) => \r\n          `${from}-${to} de ${count}`\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaginatedTable;","// src/components/dashboard/LatestCommitsTable.jsx\r\nimport React from 'react';\r\nimport { \r\n  Paper, \r\n  Typography,\r\n  Link,\r\n  Chip,\r\n  TableCell,\r\n  TableRow,\r\n  Box\r\n} from '@mui/material';\r\nimport { History } from '@mui/icons-material';\r\nimport _ from 'lodash';\r\nimport PaginatedTable from './PaginatedTable';\r\n\r\nconst MAX_MESSAGE_LENGTH = 100;\r\n\r\nfunction truncateMessage(message) {\r\n  const firstLine = message.split('\\n')[0];\r\n  if (firstLine.length <= MAX_MESSAGE_LENGTH) return firstLine;\r\n  return firstLine.substring(0, MAX_MESSAGE_LENGTH) + '...';\r\n}\r\n\r\nfunction LatestCommitsTable({ data }) {\r\n  const sortedCommits = _.orderBy(data, ['date'], ['desc']);\r\n\r\n  const columns = ['Autor', 'Mensagem', 'Repositório', 'Data'];\r\n  const columnWidths = ['150px', '45%', '25%', '150px'];\r\n\r\n  const renderRow = (commit, index) => (\r\n    <TableRow key={index}>\r\n      <TableCell style={{ width: columnWidths[0] }}>{commit.author}</TableCell>\r\n      <TableCell style={{ width: columnWidths[1] }}>\r\n        <Link \r\n          href={commit.htmlUrl} \r\n          target=\"_blank\" \r\n          rel=\"noopener\" \r\n          title={commit.message.split('\\n')[0]}\r\n          sx={{ \r\n            display: 'block',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap'\r\n          }}\r\n        >\r\n          {truncateMessage(commit.message)}\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell style={{ width: columnWidths[2] }}>\r\n        <Link href={commit.repoUrl} target=\"_blank\" rel=\"noopener\">\r\n          <Chip label={commit.repo} size=\"small\" variant=\"outlined\" />\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell style={{ width: columnWidths[3] }}>{commit.date.toLocaleString('pt-BR')}</TableCell>\r\n    </TableRow>\r\n  );\r\n\r\n  const renderMobileRow = (commit, index, style) => (\r\n    <TableRow key={index} sx={{ backgroundColor: style.backgroundColor }}>\r\n      <TableCell sx={{ p: 2 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 1 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 500 }}>{commit.author}</Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 2 }}>\r\n            {commit.date.toLocaleString('pt-BR')}\r\n          </Typography>\r\n        </Box>\r\n        <Link \r\n          href={commit.htmlUrl} \r\n          target=\"_blank\" \r\n          rel=\"noopener\"\r\n          title={commit.message.split('\\n')[0]}\r\n          sx={{ \r\n            display: 'block',\r\n            mb: 1,\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap'\r\n          }}\r\n        >\r\n          {truncateMessage(commit.message)}\r\n        </Link>\r\n        <Link href={commit.repoUrl} target=\"_blank\" rel=\"noopener\">\r\n          <Chip \r\n            label={commit.repo} \r\n            size=\"small\" \r\n            variant=\"outlined\" \r\n            sx={{ maxWidth: '100%', overflow: 'hidden' }}\r\n          />\r\n        </Link>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n\r\n  return (\r\n    <Paper sx={{ p: 2 }}>\r\n      <Typography variant=\"h6\" component=\"div\" sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <History />\r\n        Últimos Commits\r\n      </Typography>\r\n      <PaginatedTable\r\n        data={sortedCommits}\r\n        columns={columns}\r\n        columnWidths={columnWidths}\r\n        renderRow={renderRow}\r\n        renderMobileRow={renderMobileRow}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default LatestCommitsTable;","// src/components/dashboard/AuthorCommitsTable.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  Paper, \r\n  Typography,\r\n  Box,\r\n  Link,\r\n  Chip,\r\n  TextField,\r\n  InputAdornment,\r\n  Autocomplete,\r\n  TableCell,\r\n  TableRow,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Stack\r\n} from '@mui/material';\r\nimport { Person, Search } from '@mui/icons-material';\r\nimport _ from 'lodash';\r\nimport PaginatedTable from './PaginatedTable';\r\n\r\nconst MAX_MESSAGE_LENGTH = 100;\r\n\r\nfunction truncateMessage(message) {\r\n  const firstLine = message.split('\\n')[0];\r\n  if (firstLine.length <= MAX_MESSAGE_LENGTH) return firstLine;\r\n  return firstLine.substring(0, MAX_MESSAGE_LENGTH) + '...';\r\n}\r\n\r\nfunction AuthorCommitsTable({ data }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\r\n  const [authors, setAuthors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const commitsByAuthor = _.groupBy(data, 'author');\r\n    \r\n    const processedAuthors = Object.entries(commitsByAuthor).map(([author, commits]) => {\r\n      const lastCommit = _.maxBy(commits, commit => new Date(commit.date));\r\n      return {\r\n        name: author,\r\n        lastCommitDate: lastCommit.date,\r\n        totalCommits: commits.length\r\n      };\r\n    });\r\n\r\n    const sortedAuthors = _.orderBy(processedAuthors, ['lastCommitDate'], ['desc']);\r\n    setAuthors(sortedAuthors);\r\n\r\n    if (!selectedAuthor && sortedAuthors.length > 0) {\r\n      setSelectedAuthor(sortedAuthors[0].name);\r\n    }\r\n  }, [data]);\r\n\r\n  const authorCommits = selectedAuthor\r\n    ? _.orderBy(\r\n        data.filter(commit => commit.author === selectedAuthor),\r\n        ['date'],\r\n        ['desc']\r\n      )\r\n    : [];\r\n\r\n  const columns = ['Mensagem', 'Repositório', 'Data'];\r\n  const columnWidths = ['50%', '30%', '20%'];\r\n\r\n  const renderRow = (commit, index) => (\r\n    <TableRow key={index}>\r\n      <TableCell style={{ width: columnWidths[0] }}>\r\n        <Link \r\n          href={commit.htmlUrl} \r\n          target=\"_blank\" \r\n          rel=\"noopener\"\r\n          title={commit.message.split('\\n')[0]}\r\n          sx={{ \r\n            display: 'block',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap'\r\n          }}\r\n        >\r\n          {truncateMessage(commit.message)}\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell style={{ width: columnWidths[1] }}>\r\n        <Link href={commit.repoUrl} target=\"_blank\" rel=\"noopener\">\r\n          <Chip label={commit.repo} size=\"small\" variant=\"outlined\" />\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell style={{ width: columnWidths[2] }}>{commit.date.toLocaleString('pt-BR')}</TableCell>\r\n    </TableRow>\r\n  );\r\n\r\n  const renderMobileRow = (commit, index, style) => (\r\n    <TableRow key={index} sx={{ backgroundColor: style.backgroundColor }}>\r\n      <TableCell sx={{ p: 2 }}>\r\n        <Link \r\n          href={commit.htmlUrl} \r\n          target=\"_blank\" \r\n          rel=\"noopener\"\r\n          title={commit.message.split('\\n')[0]}\r\n          sx={{ \r\n            display: 'block',\r\n            mb: 1,\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap'\r\n          }}\r\n        >\r\n          {truncateMessage(commit.message)}\r\n        </Link>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <Link href={commit.repoUrl} target=\"_blank\" rel=\"noopener\">\r\n            <Chip \r\n              label={commit.repo} \r\n              size=\"small\" \r\n              variant=\"outlined\"\r\n              sx={{ maxWidth: '100%', overflow: 'hidden' }}\r\n            />\r\n          </Link>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            {commit.date.toLocaleString('pt-BR')}\r\n          </Typography>\r\n        </Box>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n\r\n  const renderAuthorOption = (props, option) => {\r\n    const { key, ...other } = props;\r\n    const author = authors.find(a => a.name === option);\r\n\r\n    if (isMobile) {\r\n      return (\r\n        <Box component=\"li\" key={key} {...other}>\r\n          <Stack spacing={0.5} sx={{ p: 2 }}>\r\n            <Typography variant=\"subtitle1\" noWrap>{option}</Typography>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {author.totalCommits} commits\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                • Último: {new Date(author.lastCommitDate).toLocaleDateString('pt-BR')}\r\n              </Typography>\r\n            </Box>\r\n          </Stack>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Box component=\"li\" key={key} {...other} sx={{ padding: 2 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', width: '100%', alignItems: 'center' }}>\r\n          <Typography>{option}</Typography>\r\n          <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\r\n            <Chip \r\n              size=\"small\" \r\n              label={`${author.totalCommits} commits`}\r\n              variant=\"outlined\"\r\n            />\r\n            <Typography variant=\"caption\" color=\"text.secondary\">\r\n              Último: {new Date(author.lastCommitDate).toLocaleDateString('pt-BR')}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 2 }}>\r\n      <Typography variant=\"h6\" component=\"div\" sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <Person />\r\n        Commits por Autor\r\n      </Typography>\r\n\r\n      <Box sx={{ mb: 3 }}>\r\n        <Autocomplete\r\n          value={selectedAuthor}\r\n          onChange={(event, newValue) => setSelectedAuthor(newValue)}\r\n          options={authors.map(author => author.name)}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              placeholder=\"Buscar autor...\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Search />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          )}\r\n          renderOption={renderAuthorOption}\r\n          ListboxProps={{\r\n            sx: {\r\n              '& li': {\r\n                borderBottom: '1px solid',\r\n                borderColor: 'divider',\r\n                '&:last-child': {\r\n                  borderBottom: 'none'\r\n                }\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </Box>\r\n\r\n      {selectedAuthor && (\r\n        <PaginatedTable\r\n          data={authorCommits}\r\n          columns={columns}\r\n          columnWidths={columnWidths}\r\n          renderRow={renderRow}\r\n          renderMobileRow={renderMobileRow}\r\n        />\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default AuthorCommitsTable;","// src/components/dashboard/RepoCommitsTable.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  Paper, \r\n  Typography,\r\n  Box,\r\n  Link,\r\n  Chip,\r\n  TextField,\r\n  InputAdornment,\r\n  Autocomplete,\r\n  TableCell,\r\n  TableRow,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Stack\r\n} from '@mui/material';\r\nimport { GitHub, Search } from '@mui/icons-material';\r\nimport _ from 'lodash';\r\nimport PaginatedTable from './PaginatedTable';\r\n\r\nconst MAX_MESSAGE_LENGTH = 100;\r\n\r\nfunction truncateMessage(message) {\r\n  const firstLine = message.split('\\n')[0];\r\n  if (firstLine.length <= MAX_MESSAGE_LENGTH) return firstLine;\r\n  return firstLine.substring(0, MAX_MESSAGE_LENGTH) + '...';\r\n}\r\n\r\nfunction RepoCommitsTable({ data }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [selectedRepo, setSelectedRepo] = useState(null);\r\n  const [repos, setRepos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const commitsByRepo = _.groupBy(data, 'repo');\r\n    \r\n    const processedRepos = Object.entries(commitsByRepo).map(([repo, commits]) => {\r\n      const lastCommit = _.maxBy(commits, commit => new Date(commit.date));\r\n      return {\r\n        name: repo,\r\n        lastCommitDate: lastCommit.date,\r\n        totalCommits: commits.length,\r\n        repoUrl: lastCommit.repoUrl\r\n      };\r\n    });\r\n\r\n    const sortedRepos = _.orderBy(processedRepos, ['lastCommitDate'], ['desc']);\r\n    setRepos(sortedRepos);\r\n\r\n    if (!selectedRepo && sortedRepos.length > 0) {\r\n      setSelectedRepo(sortedRepos[0].name);\r\n    }\r\n  }, [data]);\r\n\r\n  const repoCommits = selectedRepo\r\n    ? _.orderBy(\r\n        data.filter(commit => commit.repo === selectedRepo),\r\n        ['date'],\r\n        ['desc']\r\n      )\r\n    : [];\r\n\r\n  const columns = ['Autor', 'Mensagem', 'Data'];\r\n  const columnWidths = ['20%', '60%', '20%'];\r\n\r\n  const renderRow = (commit, index) => (\r\n    <TableRow key={index}>\r\n      <TableCell style={{ width: columnWidths[0] }}>{commit.author}</TableCell>\r\n      <TableCell style={{ width: columnWidths[1] }}>\r\n        <Link \r\n          href={commit.htmlUrl} \r\n          target=\"_blank\" \r\n          rel=\"noopener\"\r\n          title={commit.message.split('\\n')[0]}\r\n          sx={{ \r\n            display: 'block',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap'\r\n          }}\r\n        >\r\n          {truncateMessage(commit.message)}\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell style={{ width: columnWidths[2] }}>{commit.date.toLocaleString('pt-BR')}</TableCell>\r\n    </TableRow>\r\n  );\r\n\r\n  const renderMobileRow = (commit, index, style) => (\r\n    <TableRow key={index} sx={{ backgroundColor: style.backgroundColor }}>\r\n      <TableCell sx={{ p: 2 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 1 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 500 }}>{commit.author}</Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 2 }}>\r\n            {commit.date.toLocaleString('pt-BR')}\r\n          </Typography>\r\n        </Box>\r\n        <Link \r\n          href={commit.htmlUrl} \r\n          target=\"_blank\" \r\n          rel=\"noopener\"\r\n          title={commit.message.split('\\n')[0]}\r\n          sx={{ \r\n            display: 'block',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap'\r\n          }}\r\n        >\r\n          {truncateMessage(commit.message)}\r\n        </Link>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n\r\n  const renderRepoOption = (props, option) => {\r\n    const { key, ...other } = props;\r\n    const repo = repos.find(r => r.name === option);\r\n\r\n    if (isMobile) {\r\n      return (\r\n        <Box component=\"li\" key={key} {...other}>\r\n          <Stack spacing={0.5} sx={{ p: 2 }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <GitHub fontSize=\"small\" />\r\n              <Typography variant=\"subtitle1\" noWrap>{option}</Typography>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {repo.totalCommits} commits\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                • Último: {new Date(repo.lastCommitDate).toLocaleDateString('pt-BR')}\r\n              </Typography>\r\n            </Box>\r\n          </Stack>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Box component=\"li\" key={key} {...other} sx={{ padding: 2 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', width: '100%', alignItems: 'center' }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <GitHub fontSize=\"small\" />\r\n            <Typography>{option}</Typography>\r\n          </Box>\r\n          <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\r\n            <Chip \r\n              size=\"small\" \r\n              label={`${repo.totalCommits} commits`}\r\n              variant=\"outlined\"\r\n            />\r\n            <Typography variant=\"caption\" color=\"text.secondary\">\r\n              Último: {new Date(repo.lastCommitDate).toLocaleDateString('pt-BR')}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 2 }}>\r\n      <Typography variant=\"h6\" component=\"div\" sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <GitHub />\r\n        Commits por Repositório\r\n      </Typography>\r\n\r\n      <Box sx={{ mb: 3 }}>\r\n        <Autocomplete\r\n          value={selectedRepo}\r\n          onChange={(event, newValue) => setSelectedRepo(newValue)}\r\n          options={repos.map(repo => repo.name)}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              placeholder=\"Buscar repositório...\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Search />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          )}\r\n          renderOption={renderRepoOption}\r\n          ListboxProps={{\r\n            sx: {\r\n              '& li': {\r\n                borderBottom: '1px solid',\r\n                borderColor: 'divider',\r\n                '&:last-child': {\r\n                  borderBottom: 'none'\r\n                }\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </Box>\r\n\r\n      {selectedRepo && (\r\n        <PaginatedTable\r\n          data={repoCommits}\r\n          columns={columns}\r\n          columnWidths={columnWidths}\r\n          renderRow={renderRow}\r\n          renderMobileRow={renderMobileRow}\r\n        />\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default RepoCommitsTable;"],"names":["logoImage","ConsolidatedDataExport","data","open","setOpen","useState","currentDate","Date","month","setMonth","getMonth","year","setYear","getFullYear","years","_","uniq","map","commit","date","filter","sort","a","b","months","Array","from","length","i","value","label","toLocaleString","handleExport","periodCommits","commitDate","commitsByRepo","groupBy","csvData","Object","entries","repo","commits","authors","c","author","join","Repositório","Efetivo","headers","csvString","row","header","headerRow","dataRows","split","sortedRows","commitsA","parseInt","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","String","padStart","click","jsxs","Fragment","jsx","Button","Assessment","mt","Dialog","DialogTitle","DialogContent","Box","display","gap","FormControl","InputLabel","Select","e","target","yearOption","isDisabled","MenuItem","DialogActions","DashboardHeader","alignItems","height","Typography","StatsCard","title","Grid","Paper","p","textAlign","StatsCards","commits2025","commits2024","repos2025","Set","size","repos2024","mb","convertToBrasiliaTimezone","timeZone","groupCommitsByBrasiliaDate","reduce","acc","dateKey","toLocaleDateString","push","getLastNDaysInBrasilia","days","now","setDate","getDate","isoDate","displayDate","fullDate","day","reverse","DailyCommitsChart","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","isTablet","viewportConfig","useMemo","daysToShow","axisInterval","dateFormat","chartData","lastDays","commitsByDate","CustomTooltip","active","payload","bgcolor","border","borderColor","borderRadius","boxShadow","shadows","fontWeight","xs","sm","md","fontSize","Timeline","ResponsiveContainer","BarChart","top","right","left","bottom","XAxis","fill","palette","text","primary","YAxis","Math","floor","Tooltip","action","hover","Bar","main","MonthlyCommitsChart","fullLabel","BarChartIcon","weekDayOrder","WeekdayCommitsChart","commitsByDayOfWeek","weekday","toLowerCase","slice","fullDay","CalendarMonth","timeRanges","mobileLabel","start","end","HourlyCommitsChart","range","hour","hour12","brasiliaHour","fullRange","AccessTime","COLORS","ImprovedReposPieChart","showAll","setShowAll","org","pieChartData","processData","allRepos","name","fullName","topRepos","otherRepos","otherValue","sumBy","total","percentage","toFixed","CustomLegend","flexWrap","justifyContent","maxHeight","overflowY","px","entry","index","minWidth","width","backgroundColor","color","maxWidth","whiteSpace","overflow","textOverflow","PieChartIcon","ExpandLess","ExpandMore","PieChart","Pie","Cell","Legend","CurrentMonthPieChart","currentMonth","currentYear","currentMonthCommits","currentMonthShort","totalRepos","CalendarToday","CurrentMonthWeekdayChart","CurrentMonthHourlyChart","nowDate","PaginatedTable","columns","columnWidths","renderRow","renderMobileRow","defaultRowsPerPage","mobileRowsPerPage","page","setPage","rowsPerPage","handleChangePage","event","newPage","paginatedData","TableContainer","Table","tableLayout","TableHead","TableRow","column","TableCell","TableBody","item","TablePagination","to","count","MAX_MESSAGE_LENGTH","truncateMessage","message","firstLine","substring","LatestCommitsTable","sortedCommits","orderBy","History","Link","htmlUrl","repoUrl","Chip","style","ml","AuthorCommitsTable","selectedAuthor","setSelectedAuthor","setAuthors","useEffect","commitsByAuthor","processedAuthors","lastCommit","maxBy","lastCommitDate","totalCommits","sortedAuthors","authorCommits","renderAuthorOption","props","option","key","other","find","Stack","padding","Person","Autocomplete","newValue","params","TextField","InputProps","startAdornment","InputAdornment","Search","sx","borderBottom","RepoCommitsTable","selectedRepo","setSelectedRepo","repos","setRepos","processedRepos","sortedRepos","repoCommits","renderRepoOption","r","GitHub"],"mappings":"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"}